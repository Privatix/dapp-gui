{
    "auth/setPassword": {
        "setThePassword": "Set the password to",
        "Password": "Password",
        "Confirmation": "Confirmation",
        "PasswordAndConfirmationAreNotEqual" : "Password and confirmation are not equal!",
        "PasswordLengthMustBe" : "Password length must be at least 8 and at most 24 symbols.",
        "ThePasswordMustBeStrong": "The password must be strong.",
        "InCaseYouLostYourPassword": "In case you lost your password, you lost all your data. It is NOT possible to access your account without a password and there is no forgot my password option here. Do not forget it.",
        "WeWillUseThisPassword" : "We will use this password as a key for encrypting your private key.",
        "WeStoreYourPrivateKeys": "We store your private keys encrypted and <br />in same format as ethereum node"
    },
    "auth/setAccount": {
        "SetTheContractAccount": "Set the contract account of",
        "ForTokenTransfers" : "For token transfers, you need to add your Private Key for address, that holds PRIX",
        "WeRecommendYou" : "We recommend you",
        "createASeparateAccount": "create a separate account",
        "transferToThem": "transfer to them limited amount of PRIX and ETH",
        "useThisSeparateAccount" : "use this separate account in this application",
        "PleaseChooseTheWay": "Please choose the way you want to import Ethereum account",
        "GenerateNew": "Generate new (recommended)",
        "ImportKeyInHex": "Import a Private Key in hex format",
        "ImportFromJSON": "Import from JSON Keystore File"
    },
    "auth/generateKey":{
        "Name": "Name",
        "WhileNextButton": "While next button will be pressed, we will generate a new account.",
        "IfYouLoseThePassword": "If you lose the password you use to encrypt your account, you will not be able to access that account",
        "AccountsNameCantBeEmpty": "Accounts name can't be empty."
    },
    "auth/importJsonKey":{
        "NoFileChosen": "No file chosen.",
        "PleaseSetThePassword": "Please set the password.",
        "PleaseEnterAValidPassword": "Please enter a valid password.",
        "PathToJSONKeystoreFile": "Path to JSON Keystore File",
        "PasswordWillBeUsed": "Password (will be used to decrypt JSON)",
        "MoreInformation": "More information about Ethereum Private Key"
    },
    "auth/importHexKey": {
        "PleaseInputHexRepresentation": "Please, input hex representation of your Private Key for address, that holds PRIX",
        "PrivateKey": "Private key",
        "PrivateKeyMustHave": "Private key must have exactly 64 hex symbols."
    },
    "auth/backup": {
        "generateKey": "new key hase been succesfully generated and registered!",
        "importHexKey": "hex key hase been succesfully imported and registered!",
        "importJsonKey": "JSON Keystore File hase been succesfully imported!",
        "PleaseBackupYourAccount": "Please backup your account before start working.",
        "SomeErrorOccured": "Some error occured. Can't save file by specified path.",
        "ToPreventEthereumAddress": "To prevent Ethereum address data lost you need to backup your Private Key in a safe location as a file.",
        "NoteWeEncryptThisFile": "Note: We encrypt this file using your application access password. Don't forget it!",
        "Browse": "Browse"
    },
    "auth/steps": {
        "Password": "Password",
        "Import": "Import",
        "Account": "Account",
        "Backup" : "Backup"
    },
    "auth/utils": {
        "Next": "Next",
        "Previous": "Previous"
    },
    "header": {
        "Accounts": "Accounts",
        "Help": "Help",
        "SwitchToClient": "Switch to Client",
        "SwitchToAgent": "Switch to Agent",
        "Settings": "Settings",
        "Logs": "Logs",
        "user": "user",
        "SomethingWentWrong": "Something went wrong!",
        "UserWasSwitchedToAGENT": "User mode was successfully switched to AGENT",
        "UserWasSwitchedToCLIENT": "User mode was successfully switched to CLIENT"
    },
    "navigation": {
        "Dashboard": "Dashboard",
        "Services": "Services",
        "Active": "Active",
        "History": "History",
        "Sessions": "Sessions",
        "Offerings": "Offerings",
        "Servers": "Servers",
        "ClientDashboard": "Client Dashboard",
        "VPNList": "VPN List"
    },
    "topPanel": {
        "ETHBalance": "ETH Balance",
        "ExchangeBalance": "Exchange Balance",
        "ServiceBalance": "Service balance",
        "ActiveServices": "Active Services",
        "Status": "Status",
        "TotalTraffic": "Total Traffic"
    },
    "utils/notice": {
        "Error!": "Error!",
        "Attention!": "Attention!",
        "Congratulations!": "Congratulations!"
    },
    "logs/logsList": {
        "LogsHeader": "Logs list",
        "ExportBtn": "Export to a file",
        "LogsFilterFrom": "From:",
        "LogsFilterTo": "To:",
        "LogsFilterTime": "time",
        "LogsSearchPlaceholder": "search",
        "NowBtn": "Now",
        "Level": "Level",
        "Date": "Date",
        "Message": "Message",
        "Context": "Context",
        "Stack": "Stack",
        "ShowBtn": "show",
        "StackTrace": "Stack trace:",
        "WarningDateMessage": "Please, don't select logs in more than 5 days. It can take a lot of time!"
    },
    "logs/logsContext": {
        "Key": "Key",
        "Value": "Value"
    },
    "accounts/accountsList": {
        "Title": "Accounts",
        "CreateBtn": "Create an account",
        "Name": "Name",
        "EthereumAddress": "Ethereum address",
        "ETH": "ETH",
        "ExchangeBalance": "Exchange balance",
        "ServiceBalance": "Service balance",
        "IsDefault": "Is Default",
        "Actions": "Actions",
        "CheckBalanceBtn": "Check balance",
        "ModalTitle": "Account",
        "RefreshingAccountBalanceMsg": "Refreshing account balance. Please wait 1-2 minutes."
    },
    "accounts/accountView": {
        "ErrorMoreThanZero": "Amount must be more than zero.",
        "ErrorNotEnoughExchangeFunds": " Not enough funds on Exchange balance.",
        "ErrorNotEnoughServiceFunds": " Not enough funds on Service balance.",
        "ErrorNotEnoughPublishFunds": " Not enough funds to publish transaction.",
        "SuccessMessage": "The data was successfully transmitted. Once the transaction will in the blockchain, you will see it in the list below.",
        "GeneralInfo": "General Info",
        "Name": "Name:",
        "Address": "Address:",
        "BalanceInfo": "Balance Info",
        "ExchangeBalance": "Exchange balance:",
        "ServiceBalance": "Service balance:",
        "Transfer": "Transfer",
        "TransferBtn": "Transfer",
        "From": "From:",
        "To": "To:",
        "ExchangeBalanceOption": "Exchange balance",
        "ServiceBalanceOption": "Service balance",
        "Amount": "Amount:",
        "TransactionLog": "Transaction Log",
        "TransferConfirmBtn": "Yes, transfer!",
        "TransferSwalTitle": "Are you sure?",
        "ServiceSwalBalanceFrom": "Service balance",
        "ExchangeSwalBalanceFrom": "Exchange balance",
        "ServiceSwalBalance": "Service balance",
        "ExchangeSwalBalance": "Exchange balance",
        "TransferSwalText1": "This action will transfer your tokens from",
        "TransferSwalText2": "to",
        "TransferSwalText3": ".",
        "TransferSwalText4": "This operation takes time and gas.",
        "TransferSwalText5": "You can monitor transaction status in the Transaction log."
    },
    "utils/gasRange": {
        "GasPrice": "Gas price",
        "AveragePublicationTimeText": "Average publication time:",
        "AverageAcceptanceTimeText": "Average acceptance time:",
        "AverageTime": "min",
        "MoreInformation": "More information:"
    },
    "transactions/transactionsList": {
        "Date": "Date",
        "EthereumLink": "Ethereum link"
    },
    "confirmPopupSwal": {
        "CancelBtn": "Cancel"
    }
}
